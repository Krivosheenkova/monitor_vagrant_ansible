services:
  prometheus:
    image: {{ prometheus_image }}
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle
    ports:
      - 9090:9090
    networks:
      - host-monitoring
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--spider", "http://localhost:9090/-/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: {{ grafana_image }}
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD={{ grafana_admin_passwd }}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_storage:/var/lib/grafana 
      - ./{{ grafana_provisioning_dir }}:/etc/grafana/provisioning 
    ports:
      - "3000:3000" 
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - host-monitoring
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  prometheus_data:
  grafana_storage:

networks:
  host-monitoring:
    driver: bridge